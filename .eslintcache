[{"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\index.js":"1","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\App.jsx":"2","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\reducers\\index.js":"3","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\actions\\user.action.js":"4","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Header\\Header.jsx":"5","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\Home\\Home.jsx":"6","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Footer\\Footer.jsx":"7","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\reducers\\user.reducer.js":"8","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\constants\\actionTypes.js":"9","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Header\\Nav\\Nav.jsx":"10","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Search\\Search.jsx":"11","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Home\\RightContent\\RightContent.jsx":"12","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Home\\LeftContent\\LeftContent.jsx":"13","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\utils\\ListFilm\\ListFilm.jsx":"14","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\utils\\ListFilm\\Film\\Film.jsx":"15","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\utils\\Stars\\Stars.jsx":"16","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\apis\\index.js":"17","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\apis\\axios.js":"18","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\Login\\Login.jsx":"19","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\Manager\\Manager.jsx":"20","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\OddFilm\\OddFilm.jsx":"21","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\SeriesFilm\\SeriesFilm.jsx":"22","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\Film\\Film.jsx":"23","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Modal\\ModalFilm.jsx":"24","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\reducers\\film.reducer.js":"25","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\actions\\film.action.js":"26"},{"size":531,"mtime":1614045699185,"results":"27","hashOfConfig":"28"},{"size":1724,"mtime":1614065455810,"results":"29","hashOfConfig":"28"},{"size":180,"mtime":1614053391321,"results":"30","hashOfConfig":"28"},{"size":2825,"mtime":1614065019937,"results":"31","hashOfConfig":"28"},{"size":731,"mtime":1613883117384,"results":"32","hashOfConfig":"28"},{"size":713,"mtime":1614053987915,"results":"33","hashOfConfig":"28"},{"size":1205,"mtime":1613883117383,"results":"34","hashOfConfig":"28"},{"size":814,"mtime":1614065500228,"results":"35","hashOfConfig":"28"},{"size":799,"mtime":1614064801785,"results":"36","hashOfConfig":"28"},{"size":2088,"mtime":1614065171518,"results":"37","hashOfConfig":"28"},{"size":521,"mtime":1613883117389,"results":"38","hashOfConfig":"28"},{"size":1584,"mtime":1614054996593,"results":"39","hashOfConfig":"28"},{"size":733,"mtime":1614053987995,"results":"40","hashOfConfig":"28"},{"size":389,"mtime":1614054366814,"results":"41","hashOfConfig":"28"},{"size":1137,"mtime":1614057350657,"results":"42","hashOfConfig":"28"},{"size":550,"mtime":1613883117395,"results":"43","hashOfConfig":"28"},{"size":1356,"mtime":1614059901092,"results":"44","hashOfConfig":"28"},{"size":116,"mtime":1614066908326,"results":"45","hashOfConfig":"28"},{"size":8066,"mtime":1614056601797,"results":"46","hashOfConfig":"28"},{"size":7638,"mtime":1614065337348,"results":"47","hashOfConfig":"28"},{"size":868,"mtime":1614055172377,"results":"48","hashOfConfig":"28"},{"size":884,"mtime":1614055222010,"results":"49","hashOfConfig":"28"},{"size":5452,"mtime":1614065238777,"results":"50","hashOfConfig":"28"},{"size":441,"mtime":1613883117388,"results":"51","hashOfConfig":"28"},{"size":1094,"mtime":1614059073397,"results":"52","hashOfConfig":"28"},{"size":1984,"mtime":1614064599276,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"14uhf99",{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\index.js",[],["117","118"],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\App.jsx",["119","120"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nimport { checkLogin, setRole } from \"./actions/user.action\";\r\nimport { getFilms } from \"./actions/film.action\";\r\n\r\nimport \"./scss/index.scss\";\r\nimport Home from \"./pages/Home/Home\";\r\nimport Login from \"./pages/Login/Login\";\r\nimport Film from \"./pages/Film/Film\";\r\nimport Manager from \"./pages/Manager/Manager\";\r\nimport OddFilm from \"./pages/OddFilm/OddFilm\";\r\nimport SeriesFilm from \"./pages/SeriesFilm/SeriesFilm\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.users.user);\r\n  const [cookies] = useCookies([\"user\"]);\r\n  useEffect(() => {\r\n    if (cookies.user !== \"\") {\r\n      dispatch(checkLogin(cookies.user));\r\n    }\r\n    dispatch(getFilms());\r\n  }, []);\r\n  useEffect(() => {\r\n    dispatch(setRole(user?._id));\r\n  }, [user]);\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <Header />\r\n        <section className=\"app__content\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/oddfilm\" component={OddFilm} />\r\n            <Route path=\"/seriesfilm\" component={SeriesFilm} />\r\n            <Route path=\"/account\" component={Login} />\r\n            <Route path=\"/manager\" component={Manager} />\r\n            <Route path=\"/film/:id\" component={Film} />\r\n          </Switch>\r\n        </section>\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\reducers\\index.js",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\actions\\user.action.js",["121","122"],"import {\r\n  LOGIN,\r\n  REGISTER,\r\n  DELETE_USER,\r\n  GET_USER,\r\n  LOGOUT,\r\n  CHECK_LOGIN,\r\n  LOGIN_GOOGLE,\r\n  ADD_FAVORITE,\r\n  ADD_WATCHED,\r\n  REMOVE_FAVORITE,\r\n  SET_ROLE,\r\n} from \"../constants/actionTypes\";\r\nimport * as api from \"../apis\";\r\n\r\nexport const registerUser = (user, setCookies) => async (dispatch) => {\r\n  try {\r\n    await api.registerUser(user);\r\n    const { data } = await api.loginUser({ email: user.email, password: user.password });\r\n    await setCookies(\"user\", data.token, { path: \"/\" });\r\n    dispatch({ type: REGISTER, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const loginUser = (user, setCookies) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.loginUser({ email: user.email, password: user.password });\r\n    await setCookies(\"user\", data.token, { path: \"/\" });\r\n    dispatch({ type: LOGIN, payload: data });\r\n  } catch (error) {\r\n    return error.response.data.message;\r\n  }\r\n};\r\nexport const logoutUser = () => (dispatch) => {\r\n  try {\r\n    dispatch({ type: LOGOUT });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const checkLogin = (token) => async (dispatch) => {\r\n  try {\r\n    if (token) {\r\n      const check = await api.checkLogin(token);\r\n      if (check.data) {\r\n        const { data } = await api.getUser(token);\r\n        dispatch({ type: CHECK_LOGIN, payload: { data, token } });\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const loginGoogle = (user, setCookies) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.loginGoogle(user);\r\n    setCookies(\"user\", data.token, { path: \"/\" });\r\n    dispatch({ type: LOGIN_GOOGLE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const addFavorite = (id, idFilm) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addFavorite(id, idFilm);\r\n    console.log(data);\r\n    dispatch({ type: ADD_FAVORITE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const addWatched = (id, idFilm) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addWatched(id, idFilm);\r\n    dispatch({ type: ADD_WATCHED, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const removeFavorite = (id, idFilm) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.removeFavorite(id, idFilm);\r\n    console.log(data);\r\n    dispatch({ type: REMOVE_FAVORITE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const setRole = (id) => async (dispatch) => {\r\n  try {\r\n    if (id === \"6034acc0a07a4a22ecd6f0a5\") {\r\n      dispatch({ type: SET_ROLE, payload: \"admin\" });\r\n    } else {\r\n      dispatch({ type: SET_ROLE, payload: \"normal\" });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Header\\Header.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\Home\\Home.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Footer\\Footer.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\reducers\\user.reducer.js",["123","124","125"],"import {\r\n  LOGIN,\r\n  REGISTER,\r\n  DELETE_USER,\r\n  GET_USER,\r\n  LOGOUT,\r\n  CHECK_LOGIN,\r\n  LOGIN_GOOGLE,\r\n  ADD_WATCHED,\r\n  ADD_FAVORITE,\r\n  REMOVE_FAVORITE,\r\n  SET_ROLE,\r\n} from \"../constants/actionTypes\";\r\n\r\nexport default (userState = { user: {}, token: null, role: null }, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n    case LOGIN_GOOGLE:\r\n    case REGISTER:\r\n      return action.payload;\r\n    case LOGOUT:\r\n      return { user: {}, token: null };\r\n    case CHECK_LOGIN:\r\n      return { user: action.payload.data, token: action.payload.token };\r\n    case ADD_FAVORITE:\r\n    case ADD_WATCHED:\r\n    case REMOVE_FAVORITE:\r\n      return { ...userState, user: action.payload };\r\n    case SET_ROLE:\r\n      return { ...userState, role: action.payload };\r\n    default:\r\n      return userState;\r\n  }\r\n};\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\constants\\actionTypes.js",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Header\\Nav\\Nav.jsx",["126"],"import React, { useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./Nav.scss\";\r\n\r\nconst Nav = ({ showNav, setShowNav }) => {\r\n  const history = useHistory();\r\n  const location = useLocation().pathname;\r\n  const user = useSelector((state) => state.users.user);\r\n  const role = useSelector((state) => state.users.role);\r\n\r\n  useEffect(() => {\r\n    const handleEvent = (e) => {\r\n      if (e.target.classList.contains(\"bold\") || e.target.classList.contains(\"ul\")) {\r\n        setShowNav(false);\r\n      }\r\n    };\r\n    window.addEventListener(\"click\", handleEvent);\r\n    return () => window.removeEventListener(\"click\", handleEvent);\r\n  }, []);\r\n  return (\r\n    <nav className={`nav ${showNav ? \"show\" : \"\"}`}>\r\n      <ul className=\"ul\">\r\n        <li className={`bold ${location === \"/oddfilm\" ? \"active\" : \"\"}`} onClick={() => history.push(\"/oddfilm\")}>\r\n          Phim Lẻ\r\n        </li>\r\n        <li\r\n          className={`bold ${location === \"/seriesfilm\" ? \"active\" : \"\"}`}\r\n          onClick={() => history.push(\"/seriesfilm\")}\r\n        >\r\n          Phim Bộ\r\n        </li>\r\n        {role === \"admin\" && (\r\n          <li className={`bold ${location === \"/manager\" ? \"active\" : \"\"}`} onClick={() => history.push(\"/manager\")}>\r\n            Quản Lý Phim\r\n          </li>\r\n        )}\r\n        <li className={`bold ${location === \"/account\" ? \"active\" : \"\"}`} onClick={() => history.push(\"/account\")}>\r\n          {user?._id ? (\r\n            <div className=\"account bold\">\r\n              <img\r\n                src={\r\n                  user.photoURL ||\r\n                  \"https://lh3.googleusercontent.com/TuW_5qbJjB2LNHCs5ZfernjesNw936Bda_2mdRC4ruDtZVIxl5TST8ykOHbkcBBEcg=s250\"\r\n                }\r\n                alt=\"avatar\"\r\n                className=\"avatar bold\"\r\n              />\r\n              <p className=\"bold\">{user.displayName}</p>\r\n            </div>\r\n          ) : (\r\n            \"Tài Khoản\"\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Search\\Search.jsx",["127"],"import React, { useState } from \"react\";\r\nimport \"./Search.scss\";\r\nconst Search = ({ value, setValue }) => {\r\n  return (\r\n    <div className=\"search-container\">\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n          placeholder=\"Bạn muốn tìm phim gì...\"\r\n        />\r\n        <button className=\"submit-btn\" type=\"submit\">\r\n          Tìm Kiếm\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Home\\RightContent\\RightContent.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Home\\LeftContent\\LeftContent.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\utils\\ListFilm\\ListFilm.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\utils\\ListFilm\\Film\\Film.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\utils\\Stars\\Stars.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\apis\\index.js",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\apis\\axios.js",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\Login\\Login.jsx",["128","129","130"],"import React, { useState, useEffect } from \"react\";\r\nimport { ImGooglePlus } from \"react-icons/im\";\r\nimport { HiEye, HiHeart } from \"react-icons/hi\";\r\nimport { GiPopcorn } from \"react-icons/gi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport FileBase from \"react-file-base64\";\r\n\r\nimport { loginUser, logoutUser, registerUser, loginGoogle } from \"../../actions/user.action\";\r\nimport { getFavorites, getWatched } from \"../../actions/film.action\";\r\n\r\nimport ListFilm from \"../../components/utils/ListFilm/ListFilm\";\r\n\r\nimport \"./Login.scss\";\r\n\r\nconst Login = () => {\r\n  const [cookies, setCookies] = useCookies([\"user\"]);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.users.user);\r\n  const favorites = useSelector((state) => state.films.favorites);\r\n  const watched = useSelector((state) => state.films.watched);\r\n  const [active, setActive] = useState(\"heart\");\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [userData, setUserData] = useState({ email: \"\", password: \"\" });\r\n  const [dataReg, setDataReg] = useState({\r\n    email: \"\",\r\n    displayName: \"\",\r\n    password: \"\",\r\n    photoURL: null,\r\n    passwordCheck: \"\",\r\n  });\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (user) {\r\n      dispatch(getFavorites(user._id));\r\n      dispatch(getWatched(user._id));\r\n    }\r\n  }, [user]);\r\n  const handleSuccess = async (res) => {\r\n    const { name, imageUrl, email, googleId } = res.profileObj;\r\n    const token = res.tokenId;\r\n    dispatch(loginGoogle({ name, imageUrl, googleId, email, token }, setCookies));\r\n    history.push(\"/\");\r\n  };\r\n  const handleFailure = () => {\r\n    alert(\"Some errors were occur when login\");\r\n  };\r\n  const handleClickLogout = async () => {\r\n    await setCookies(\"user\", \"\", { path: \"/\" });\r\n    dispatch(logoutUser());\r\n    history.push(\"/account\");\r\n  };\r\n  const handleOnchangeLogin = (e) => {\r\n    setUserData({ ...userData, [e.target.name]: e.target.value });\r\n  };\r\n  const handleOnchangeRegister = (e) => {\r\n    setDataReg({ ...dataReg, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmitLogin = async (e) => {\r\n    e.preventDefault();\r\n    if (userData.email !== \"\" && userData.password !== \"\") {\r\n      try {\r\n        const message = await dispatch(loginUser(userData, setCookies));\r\n        if (!message) {\r\n          history.push(\"/\");\r\n        } else {\r\n          alert(message);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      alert(\"must fill in full fields\");\r\n    }\r\n    setUserData({ email: \"\", password: \"\" });\r\n  };\r\n  const handleSubmitRegister = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      dataReg.displayName !== \"\" &&\r\n      dataReg.email !== \"\" &&\r\n      dataReg.password !== \"\" &&\r\n      dataReg.photoURL !== \"\" &&\r\n      dataReg.passwordCheck !== \"\"\r\n    ) {\r\n      dispatch(registerUser(dataReg, setCookies));\r\n    } else {\r\n      alert(\"Please Fill in full fields\");\r\n    }\r\n    setDataReg({ email: \"\", displayName: \"\", password: \"\", photoURL: null, passwordCheck: \"\" });\r\n  };\r\n  if (user._id) {\r\n    return (\r\n      <section className=\"account\">\r\n        <button className=\"logout-btn\" onClick={handleClickLogout}>\r\n          Đăng Xuất\r\n        </button>\r\n        <div className=\"btn-group\">\r\n          <button className={`add-fav ${active === \"heart\" ? \"active\" : \"\"}`} onClick={() => setActive(\"heart\")}>\r\n            <HiHeart /> Yêu Thích\r\n          </button>\r\n          <button className={`watch ${active === \"eye\" ? \"active\" : \"\"}`} onClick={() => setActive(\"eye\")}>\r\n            <HiEye /> Đã Xem\r\n          </button>\r\n        </div>\r\n        <ListFilm type=\"row\" films={active === \"heart\" ? favorites : watched} />\r\n      </section>\r\n    );\r\n  }\r\n  return (\r\n    <section className=\"login\">\r\n      <div className=\"login\">\r\n        <div className=\"logo\">\r\n          <GiPopcorn className=\"icon-logo\" />\r\n          <span className=\"bold orange-text\">TEA </span> MOVIES\r\n        </div>\r\n        <p className=\"title\">Đăng nhập để trải nghiệm tốt hơn</p>\r\n        <div className=\"btn-group\">\r\n          {!isLogin && (\r\n            <button className=\"btn-login\" onClick={() => setIsLogin(true)}>\r\n              Đăng Nhập\r\n            </button>\r\n          )}\r\n          {isLogin && (\r\n            <button className=\"btn-register\" onClick={() => setIsLogin(false)}>\r\n              Đăng Ký\r\n            </button>\r\n          )}\r\n        </div>\r\n        {isLogin ? (\r\n          <form onSubmit={handleSubmitLogin}>\r\n            <label htmlFor=\"email\" className=\"text-input\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                value={userData.email}\r\n                onChange={handleOnchangeLogin}\r\n                placeholder=\"Email\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"password\" className=\"text-input\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                value={userData.password}\r\n                onChange={handleOnchangeLogin}\r\n                placeholder=\"Password\"\r\n              />\r\n            </label>\r\n            <button type=\"submit\" className=\"btn-submit\">\r\n              Đăng Nhập\r\n            </button>\r\n          </form>\r\n        ) : (\r\n          <form onSubmit={handleSubmitRegister}>\r\n            <label htmlFor=\"emailReg\" className=\"text-input\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                id=\"emailReg\"\r\n                value={dataReg.email}\r\n                onChange={handleOnchangeRegister}\r\n                placeholder=\"Email\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"passwordReg\" className=\"text-input\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"passwordReg\"\r\n                value={dataReg.password}\r\n                onChange={handleOnchangeRegister}\r\n                placeholder=\"Password\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"passwordRegCheck\" className=\"text-input\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"passwordCheck\"\r\n                id=\"passwordRegCheck\"\r\n                value={dataReg.passwordCheck}\r\n                onChange={handleOnchangeRegister}\r\n                placeholder=\"Password\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"displayName\" className=\"text-input\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"displayName\"\r\n                id=\"displayName\"\r\n                value={dataReg.displayName}\r\n                onChange={handleOnchangeRegister}\r\n                placeholder=\"Họ Tên\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"photo-url\" className=\"photo-url\">\r\n              <FileBase\r\n                type=\"file\"\r\n                id=\"photo-url\"\r\n                onDone={({ base64 }) => setDataReg({ ...dataReg, photoURL: base64 })}\r\n                multiple={false}\r\n              />\r\n            </label>\r\n            <button type=\"submit\" className=\"btn-submit-register\">\r\n              Đăng Ký\r\n            </button>\r\n          </form>\r\n        )}\r\n\r\n        <GoogleLogin\r\n          clientId=\"467571315756-vigfi3qh89vvgbeqhduotlr2jso13gl5.apps.googleusercontent.com\"\r\n          onSuccess={handleSuccess}\r\n          onFailure={handleFailure}\r\n          cookiePolicy=\"single_host_origin\"\r\n          render={(props) => (\r\n            <button className=\"login-btn\" onClick={props.onClick} disabled={props.disabled}>\r\n              <ImGooglePlus className=\"icon\" /> Đăng Nhập Bằng Google\r\n            </button>\r\n          )}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\Manager\\Manager.jsx",["131"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Manager.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createFilm, updateFilm, setIsEdit } from \"../../actions/film.action\";\r\n\r\nconst Manager = () => {\r\n  const dispatch = useDispatch();\r\n  const film = useSelector((state) => state.films.film);\r\n  const role = useSelector((state) => state.users.role);\r\n  const isEdit = useSelector((state) => state.films.isEdit);\r\n\r\n  const [filmData, setFilmData] = useState({\r\n    title: \"\",\r\n    url: \"\",\r\n    image: \"\",\r\n    stars: \"\",\r\n    category: \"\",\r\n    episode: \"\",\r\n    directors: \"\",\r\n    country: \"\",\r\n    description: \"\",\r\n    createAt: \"date\",\r\n    upComing: \"\",\r\n    evaluate: 10,\r\n    isMultiEp: \"\",\r\n  });\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      setFilmData(film);\r\n    }\r\n  }, []);\r\n  const handleChange = (e) => {\r\n    setFilmData({ ...filmData, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (Object.values(filmData).every((item) => item !== \"\")) {\r\n      const regex = /youtube.com\\/watch\\?v=/g;\r\n      if (isEdit) {\r\n        dispatch(\r\n          updateFilm(isEdit, {\r\n            ...filmData,\r\n            url: filmData.url.match(regex) ? filmData.url.replace(regex, \"youtube.com/embed/\") : filmData.url,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(\r\n          createFilm({\r\n            ...filmData,\r\n            url: filmData.url.match(regex) ? filmData.url.replace(regex, \"youtube.com/embed/\") : filmData.url,\r\n          })\r\n        );\r\n      }\r\n\r\n      setFilmData({\r\n        title: \"\",\r\n        url: \"\",\r\n        image: \"\",\r\n        stars: \"\",\r\n        category: \"\",\r\n        episode: \"\",\r\n        directors: \"\",\r\n        country: \"\",\r\n        description: \"\",\r\n        createAt: \"date\",\r\n        upComing: \"\",\r\n        evaluate: 10,\r\n        isMultiEp: \"\",\r\n      });\r\n      dispatch(setIsEdit(null));\r\n      window.scrollTo({ top: 0, left: 0 });\r\n    } else {\r\n      alert(\"Phải điền đầy đủ các trường !\");\r\n    }\r\n  };\r\n  if (role !== \"admin\") return <h1>Page not found</h1>;\r\n  return (\r\n    <section className=\"manager\">\r\n      <div className=\"form-input\">\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor=\"url\" className=\"text-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"url\"\r\n              id=\"url\"\r\n              value={filmData.url}\r\n              onChange={handleChange}\r\n              placeholder=\"Đường dẫn video phim (ví dụ : https://video-phim-hay.mp4)\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"title\" className=\"text-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              id=\"title\"\r\n              value={filmData.title}\r\n              onChange={handleChange}\r\n              placeholder=\"Tên Phim (ví dụ : Gái Già Lắm Chiêu)\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"image\" className=\"text-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"image\"\r\n              id=\"image\"\r\n              value={filmData.image}\r\n              onChange={handleChange}\r\n              placeholder=\"Đường dẫn ảnh đại diện phim  (ví dụ : https://image-phim-hay.jpg)\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"stars\" className=\"text-input\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"stars\"\r\n              id=\"stars\"\r\n              value={filmData.stars}\r\n              onChange={handleChange}\r\n              placeholder=\"Số sao của phim (ví dụ: 4)\"\r\n              min=\"1\"\r\n              max=\"5\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"category\" className=\"text-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"category\"\r\n              id=\"category\"\r\n              value={filmData.category}\r\n              onChange={handleChange}\r\n              placeholder=\"Thể loại phim (ví dụ: Phim ngôn tình)\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"episode\" className=\"text-input\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"episode\"\r\n              id=\"episode\"\r\n              value={filmData.episode}\r\n              onChange={handleChange}\r\n              placeholder=\"Số tập phim (ví dụ : 3)\"\r\n              min=\"1\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"directors\" className=\"text-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"directors\"\r\n              id=\"directors\"\r\n              value={filmData.directors}\r\n              onChange={handleChange}\r\n              placeholder=\"Đạo diễn (ví dụ: Fujitora)\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"country\" className=\"text-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"country\"\r\n              id=\"country\"\r\n              value={filmData.country}\r\n              onChange={handleChange}\r\n              placeholder=\"Nước sản xuất (ví dụ : Việt Nam)\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"description\" className=\"text-input\">\r\n            <textarea\r\n              type=\"text\"\r\n              name=\"description\"\r\n              id=\"description\"\r\n              value={filmData.description}\r\n              onChange={handleChange}\r\n              placeholder=\"Mô tả phim (ví dụ : Cua Lại Vợ Bầu là một phim lẻ thuộc thể loại Hài hước nhưng không kém phần cảm xúc , nhiều lúc làm người xem phải khóc theo. Phim được thực hiện bởi đạo diễn Nhất Trung. Một đạo diễn rất nổi tiếng mà chắc hẳn fan của Phim Việt Nam chắc ai cũng biết. Phim với sự tham gia của dàn diễn viên nổi tiếng Showbiz Việt như Trấn Thành...)\"\r\n              rows=\"10\"\r\n            />\r\n          </label>\r\n          <div className=\"radio-group\">\r\n            <label className=\"radio-input\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"upComing\"\r\n                checked={filmData.upComing === \"false\"}\r\n                value=\"false\"\r\n                onChange={handleChange}\r\n              />{\" \"}\r\n              Đã ra mắt\r\n            </label>\r\n            <label className=\"radio-input\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"upComing\"\r\n                checked={filmData.upComing === \"true\"}\r\n                value=\"true\"\r\n                onChange={handleChange}\r\n              />{\" \"}\r\n              Chưa ra mắt\r\n            </label>\r\n          </div>\r\n          <div className=\"radio-group\">\r\n            <label className=\"radio-input\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"isMultiEp\"\r\n                checked={filmData.isMultiEp === \"false\"}\r\n                value=\"false\"\r\n                onChange={handleChange}\r\n              />{\" \"}\r\n              Phim Lẻ\r\n            </label>\r\n            <label className=\"radio-input\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"isMultiEp\"\r\n                checked={filmData.isMultiEp === \"true\"}\r\n                value=\"true\"\r\n                onChange={handleChange}\r\n              />{\" \"}\r\n              Phim Bộ\r\n            </label>\r\n          </div>\r\n          <button type=\"submit\" className=\"submit-btn\">\r\n            {isEdit ? \"Cập Nhật Phim\" : \"Thêm Phim\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Manager;\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\OddFilm\\OddFilm.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\SeriesFilm\\SeriesFilm.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\Film\\Film.jsx",["132"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { BsTagFill } from \"react-icons/bs\";\r\nimport { HiHeart, HiEye } from \"react-icons/hi\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\nimport { getSingleFilm, setIsEdit, removeFilm } from \"../../actions/film.action\";\r\nimport { addFavorite, addWatched, removeFavorite } from \"../../actions/user.action\";\r\nimport \"./Film.scss\";\r\nimport Stars from \"../../components/utils/Stars/Stars\";\r\nimport ListFilm from \"../../components/utils/ListFilm/ListFilm\";\r\nimport ModalFilm from \"../../components/Modal/ModalFilm\";\r\n\r\nconst Film = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.users.user);\r\n  const role = useSelector((state) => state.users.role);\r\n  const film = useSelector((state) => state.films.film);\r\n  const films = useSelector((state) => state.films.films);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    dispatch(getSingleFilm(id));\r\n    window.scrollTo({ top: 0, left: 0 });\r\n  }, [id]);\r\n\r\n  const handleFav = () => {\r\n    if (user?.favorites?.find((item) => item === film.createdAt)) {\r\n      dispatch(removeFavorite(user._id, film.createdAt));\r\n    } else {\r\n      dispatch(addFavorite(user._id, film.createdAt));\r\n    }\r\n  };\r\n  const handleWatch = () => {\r\n    if (!user?.watched?.find((item) => item === film.createdAt)) {\r\n      setModal(!modal);\r\n      dispatch(addWatched(user._id, film.createdAt));\r\n    } else if (!user) {\r\n      history.push(\"/account\");\r\n      alert(\"Phải Đăng Nhập Để Xem !\");\r\n    } else if (user) {\r\n      setModal(!modal);\r\n    }\r\n  };\r\n  const handleEdit = () => {\r\n    dispatch(setIsEdit(id));\r\n    history.push(\"/manager\");\r\n  };\r\n  const handleRemove = () => {\r\n    dispatch(removeFilm(id));\r\n    history.push(\"/\");\r\n  };\r\n  if (!film) return <></>;\r\n  return (\r\n    <section className=\"film\">\r\n      {modal && <ModalFilm setModal={setModal} url={film.url} />}\r\n      <div className=\"film__introduce\">\r\n        <div className=\"film__introduce-left\">\r\n          <img src={film.image} alt={film.title} />\r\n        </div>\r\n        <div className=\"film__introduce-right\">\r\n          <h3 className=\"title\">{film.title}</h3>\r\n          <div className=\"evaluate\">\r\n            <Stars stars={film.stars * 1} />\r\n            <p>\r\n              <BsTagFill className=\"icon-tag\" />\r\n              {film.category}\r\n            </p>\r\n          </div>\r\n          <div className=\"btn-group\">\r\n            <button\r\n              className={`add-fav ${user?.favorites?.find((item) => item === film.createdAt) ? \"disable\" : \"\"}`}\r\n              onClick={handleFav}\r\n            >\r\n              <HiHeart /> {user?.favorites?.find((item) => item === film.createdAt) ? \"Hủy Thích\" : \"Yêu Thích\"}\r\n            </button>\r\n\r\n            <button className=\"watch\" onClick={handleWatch}>\r\n              <HiEye /> {film.upComing === \"false\" ? \"Xem Phim\" : \"Trailer\"}\r\n            </button>\r\n\r\n            {role === \"admin\" && (\r\n              <>\r\n                <button className=\"watch\" onClick={handleEdit}>\r\n                  <BiEdit /> Cập Nhật\r\n                </button>\r\n                <button className=\"add-fav\" onClick={handleRemove}>\r\n                  <FaTrash /> Xóa Phim\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"details-option\">\r\n            <p>\r\n              <span className=\"bold\">Trạng thái:</span>\r\n              <span className=\"orange-text\"> {film.upComing === \"true\" ? \"Chưa ra mắt\" : \"Hoàn tất\"}</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Đạo diễn:</span> <span className=\"orange-text\">{film.directors},</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Quốc gia:</span> <span className=\"orange-text\">{film.country},</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Năm:</span> <span className=\"orange-text\">2020</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Thời lượng:</span>{\" \"}\r\n              <span className=\"orange-text\">{film.isMultiEp === \"true\" ? \"45\" : \"90\"} phút/tập</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Số tập:</span> <span className=\"orange-text\">{film.episode} tập</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Chất lượng:</span> <span className=\"orange-text\">Bản đẹp</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Độ phân giải:</span> <span className=\"orange-text\">HD 720p</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Ngôn ngữ:</span> <span className=\"orange-text\">Phụ đề Việt</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Thể loại:</span> <span className=\"orange-text\">{film.category}</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"film__detail\">{film.description}</div>\r\n      <ListFilm type=\"row\" films={films.filter((item) => item.isMultiEp === film.isMultiEp && item._id !== film._id)} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Film;\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Modal\\ModalFilm.jsx",["133"],"import React from \"react\";\r\nimport \"./ModalFilm.scss\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nconst ModalFilm = ({ setModal, url }) => {\r\n  return (\r\n    <section className=\"modal-film-overlay\">\r\n      <button className=\"close-modal\" onClick={() => setModal(false)}>\r\n        <FaTimes /> Đóng\r\n      </button>\r\n      <iframe src={url} allowFullScreen className=\"film\"></iframe>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ModalFilm;\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\reducers\\film.reducer.js",["134"],"import {\r\n  CREATE_FILM,\r\n  GET_FILMS,\r\n  GET_SINGLE_FILM,\r\n  UPDATE_FILM,\r\n  REMOVE_FILM,\r\n  SET_IS_EDIT,\r\n  GET_FAVORITES,\r\n  GET_WATCHED,\r\n} from \"../constants/actionTypes\";\r\n\r\nexport default (state = { films: [], isEdit: null, favorites: [], watched: [], film: null }, action) => {\r\n  switch (action.type) {\r\n    case CREATE_FILM:\r\n      return { ...state, films: [...state.films, action.payload] };\r\n    case GET_FILMS:\r\n      return { ...state, films: action.payload };\r\n    case SET_IS_EDIT:\r\n      return { ...state, isEdit: action.payload };\r\n    case GET_FAVORITES:\r\n      return { ...state, favorites: action.payload };\r\n    case GET_WATCHED:\r\n      return { ...state, watched: action.payload };\r\n    case GET_SINGLE_FILM:\r\n      return { ...state, film: action.payload };\r\n    case REMOVE_FILM:\r\n      return { ...state, films: state.films.filter((film) => film._id !== action.payload._id) };\r\n    case UPDATE_FILM:\r\n      return { ...state, films: state.films.map((film) => (film._id === action.payload._id ? action.payload : film)) };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\actions\\film.action.js",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":28,"column":6,"nodeType":"141","endLine":28,"endColumn":8,"suggestions":"142"},{"ruleId":"139","severity":1,"message":"143","line":31,"column":6,"nodeType":"141","endLine":31,"endColumn":12,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":4,"column":3,"nodeType":"147","messageId":"148","endLine":4,"endColumn":14},{"ruleId":"145","severity":1,"message":"149","line":5,"column":3,"nodeType":"147","messageId":"148","endLine":5,"endColumn":11},{"ruleId":"145","severity":1,"message":"146","line":4,"column":3,"nodeType":"147","messageId":"148","endLine":4,"endColumn":14},{"ruleId":"145","severity":1,"message":"149","line":5,"column":3,"nodeType":"147","messageId":"148","endLine":5,"endColumn":11},{"ruleId":"150","severity":1,"message":"151","line":15,"column":1,"nodeType":"152","endLine":34,"endColumn":3},{"ruleId":"139","severity":1,"message":"153","line":21,"column":6,"nodeType":"141","endLine":21,"endColumn":8,"suggestions":"154"},{"ruleId":"145","severity":1,"message":"155","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"156","line":9,"column":10,"nodeType":"147","messageId":"148","endLine":9,"endColumn":18},{"ruleId":"145","severity":1,"message":"157","line":20,"column":10,"nodeType":"147","messageId":"148","endLine":20,"endColumn":17},{"ruleId":"139","severity":1,"message":"143","line":42,"column":6,"nodeType":"141","endLine":42,"endColumn":12,"suggestions":"158"},{"ruleId":"139","severity":1,"message":"159","line":31,"column":6,"nodeType":"141","endLine":31,"endColumn":8,"suggestions":"160"},{"ruleId":"139","severity":1,"message":"143","line":28,"column":6,"nodeType":"141","endLine":28,"endColumn":10,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":10,"column":7,"nodeType":"164","endLine":10,"endColumn":58},{"ruleId":"150","severity":1,"message":"151","line":12,"column":1,"nodeType":"152","endLine":33,"endColumn":3},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookies.user' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["167"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["168"],"no-unused-vars","'DELETE_USER' is defined but never used.","Identifier","unusedVar","'GET_USER' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'setShowNav'. Either include it or remove the dependency array. If 'setShowNav' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["169"],"'useState' is defined but never used.","'FcGoogle' is defined but never used.","'cookies' is assigned a value but never used.",["170"],"React Hook useEffect has missing dependencies: 'film' and 'isEdit'. Either include them or remove the dependency array.",["171"],["172"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"175","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [cookies.user, dispatch]",{"range":"184","text":"185"},"Update the dependencies array to be: [dispatch, user]",{"range":"186","text":"187"},"Update the dependencies array to be: [setShowNav]",{"range":"188","text":"189"},{"range":"190","text":"187"},"Update the dependencies array to be: [film, isEdit]",{"range":"191","text":"192"},"Update the dependencies array to be: [dispatch, id]",{"range":"193","text":"194"},[1033,1035],"[cookies.user, dispatch]",[1100,1106],"[dispatch, user]",[725,727],"[setShowNav]",[1537,1543],[829,831],"[film, isEdit]",[1231,1235],"[dispatch, id]"]